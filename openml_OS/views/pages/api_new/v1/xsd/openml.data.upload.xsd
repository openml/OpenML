<!-- Schema for dataset description. Noe that it is used both for 
     uploading and downloading a dataset. Some fields, such as ID, 
     upload_date, are ignored during uploading, since these are to be 
     generated by the server. -->

<xs:schema targetNamespace="http://openml.org/openml"
    xmlns:oml="http://openml.org/openml"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified">
<xs:element name="data_set_description" type="oml:data_set_description"/>
<xs:complexType name="data_set_description">
  <xs:sequence>
    <xs:element name="id" minOccurs="0" type="xs:int"/>  <!-- ID autogenerated by the server. Integer. Added by the server. Ignored when uploaded manually. -->
    <!-- dublin core -->
    <xs:element name="name" type="oml:casual_string128"/> <!-- Name given to the dataset -->
    <xs:element name="version" minOccurs="0" type="oml:system_string64"/> <!-- Version of this dataset. '1' for original version. Auto-incremented by server. -->
    <xs:element name="description" type="oml:basic_latin16384"/>  <!-- Description of the dataset, given by the user who uploaded it. -->
    <xs:element name="format" type="oml:casual_string64"/> <!-- Format of the dataset. Will be arff for now, all lower case, no dot -->
    <xs:element name="creator" minOccurs="0" maxOccurs="unbounded" type="oml:basic_latin128"/> <!-- The person who created the dataset -->
    <xs:element name="contributor" minOccurs="0" maxOccurs="unbounded" type="oml:basic_latin128"/> <!-- People who contributed to the current version of the datadat (e.g. reformatting) -->
    <xs:element name="collection_date" minOccurs="0" type="oml:basic_latin128"/>  <!-- The date the data was originally collected, given by the uploader -->
    <xs:element name="upload_date" minOccurs="0" type="xs:dateTime"/>  <!-- The date-time, generated by server, on which the dataset was uploaded. Format YYYY-mm-dd hh:MM:SS. Added by the server. Ignored when uploaded manually. -->
    <xs:element name="language" minOccurs="0" type="oml:casual_string128"/> <!-- Language in which the data is represented. Starts with 1 upper case letter, rest lower case, e.g. 'English' -->
    <xs:element name="licence" minOccurs="0" type="oml:basic_latin64"/> <!-- Licence of the data. If not there, means: Public Domain or "dont know / care" -->
    <!-- other -->
    <xs:element name="url" minOccurs="0" type="xs:anyURI"/> <!-- Valid URL, points to actual data file, on the OpenML server or another dataset repository. If not present, it will be added by the server. -->
    <xs:element name="file_id" minOccurs="0" type="xs:int"/> <!-- Openml file id. Ignored on upload time -->
    <xs:element name="default_target_attribute" minOccurs="0" type="oml:casual_string1024"/>  <!-- The default target attribute, if it exists. Can also have multiple values (comma-separated). Of course, tasks can be defined that use another attribute as target -->  
    <xs:element name="row_id_attribute" minOccurs="0" type="oml:casual_string128"/>  <!-- The attribute that represents the row-id column, if present in the dataset. If not set, the tool should create a string rowid from 0 to (n.obs - 1). This is what is then used in the data splits object. If set, it should of course be excluded in modeling -->
    <xs:element name="ignore_attribute" minOccurs="0" maxOccurs="unbounded" type="oml:casual_string128"/>  <!-- Attributes that should be excluded in modelling, such as identifiers and indexes. -->
    <xs:element name="version_label" minOccurs="0" type="oml:casual_string128"/> <!-- Version label provided by user, something relevant to the user. Can also be a date, hash, or some other type of id. -->
    <xs:element name="citation" minOccurs="0" type="oml:basic_latin1024"/> <!-- Reference(s) that should be cited when building on this data -->
    <xs:element name="tag" minOccurs="0" maxOccurs="unbounded" type="oml:system_string64"/> <!-- Tags, describing the algorithms  -->
    <xs:element name="visibility" minOccurs="0" type="oml:access_policy"/> <!-- Who can see the dataset. Typical values: 'Everyone','All my friends','Only me'. Can also be any of the user's circles. -->
    <xs:element name="original_data_url" minOccurs="0" type="xs:anyURI"/> <!-- For derived data, the url to the original dataset. This can be an OpenML dataset, e.g. 'http://openml.org/d/1'. -->
    <xs:element name="paper_url" minOccurs="0" type="xs:anyURI"/> <!-- Link to a paper describing the dataset -->
    <xs:element name="update_comment" minOccurs="0" type="oml:basic_latin128"/> <!-- When the dataset is updated, add an explanation here. -->
    <xs:element name="status" minOccurs="0" type="oml:system_string64"/> <!-- Whether the dataset is active. Ignored on upload time. -->
    <xs:element name="processing_date" minOccurs="0" type="oml:basic_latin1024"/> <!-- Date of processing. Ignored on upload time. -->
    <xs:element name="error" minOccurs="0" type="oml:basic_latin1024"/> <!-- Errors discovered while processing the dataset. Ignored on upload time. -->
    <xs:element name="warning" minOccurs="0" type="oml:basic_latin1024"/> <!-- Warnings while processing the dataset. Ignored on upload time. -->
    <xs:element name="md5_checksum" minOccurs="0" type="oml:system_string64"/> <!-- MD5 checksum to check if the dataset is downloaded without corruption. -->
  </xs:sequence>
</xs:complexType>

<xs:simpleType name="system_string64"> <!-- Subset on xs:string. Highly restricted form of string. URL-friendly -->
  <xs:restriction base="xs:string">
    <xs:pattern value="([a-zA-Z0-9_\-\.])+"/>
    <xs:maxLength value="64" />
     <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="casual_string1024"> <!-- Subset on xs:string. Highly restricted form of string. URL-friendly -->
  <xs:restriction base="xs:string">
    <xs:pattern value="([a-zA-Z0-9_\-\.\(\),])+"/>
    <xs:maxLength value="1024" />
     <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="casual_string128"> <!-- Subset on xs:string. Highly restricted form of string. URL-friendly -->
  <xs:restriction base="xs:string">
    <xs:pattern value="([a-zA-Z0-9_\-\.\(\),])+"/>
    <xs:maxLength value="128" />
     <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="casual_string64"> <!-- Subset on xs:string. Highly restricted form of string. URL-friendly -->
  <xs:restriction base="xs:string">
     <xs:pattern value="([a-zA-Z0-9_\-\.\(\),])+"/>
     <xs:maxLength value="64" />
     <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="basic_latin64">
  <xs:restriction base="xs:string">
    <xs:pattern value="\p{IsBasicLatin}*"/>
    <xs:maxLength value="64" />
    <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="basic_latin128">
  <xs:restriction base="xs:string">
    <xs:pattern value="\p{IsBasicLatin}*"/>
    <xs:maxLength value="128" />
    <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="basic_latin1024">
  <xs:restriction base="xs:string">
    <xs:pattern value="\p{IsBasicLatin}*"/>
    <xs:maxLength value="1024" />
    <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="basic_latin16384">
  <xs:restriction base="xs:string">
    <xs:pattern value="\p{IsBasicLatin}*"/>
    <xs:maxLength value="16384" />
    <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="access_policy">
  <xs:restriction base="xs:string">
    <xs:enumeration value="circles" />
    <xs:enumeration value="public" />
    <xs:enumeration value="private" />
  </xs:restriction>
</xs:simpleType>
</xs:schema>
